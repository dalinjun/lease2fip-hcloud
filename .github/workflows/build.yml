name: build

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main

env:
  CONTAINER_IMAGE_NAME: ghcr.io/dalinjun/lease2fip-hcloud

jobs:
  build-kustomization:
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build kustomization
      run: kustomize build kustomize/example

  package-platform-specific-container-image:
    strategy:
      matrix:
        runner:
        - ubuntu-24.04
        - ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    needs:
    - build-kustomization
    steps:
    - id: platform
      name: Generate platform
      run: |
        case "${{ matrix.runner }}" in
          "ubuntu-24.04")
            echo "PLATFORM=linux/amd64" >> $GITHUB_ENV
            echo "PLATFORM_WITHOUT_SLASH=linux-amd64" >> $GITHUB_ENV
            ;;
          "ubuntu-24.04-arm")
            echo "PLATFORM=linux/arm64" >> $GITHUB_ENV
            echo "PLATFORM_WITHOUT_SLASH=linux-arm64" >> $GITHUB_ENV
            ;;
          *)
            echo "Unsupported runner: ${{ matrix.runner }}"
            exit 1
            ;;
        esac

    - id: metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.CONTAINER_IMAGE_NAME }}

    - uses: docker/setup-buildx-action@v3

    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - id: build
      name: Build container image
      uses: docker/build-push-action@v6
      with:
        build-args: |
          GIT_COMMIT_HASH=${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        labels: ${{ steps.metadata.outputs.labels }}
        outputs: type=image,push-by-digest=true,name-canonical=true,push=true
        platforms: ${{ env.PLATFORM }}
        provenance: false
        tags: ${{ env.CONTAINER_IMAGE_NAME }}

    - name: Export digest
      run: |
        mkdir -p ${{ runner.temp }}/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "${{ runner.temp }}/digests/${digest#sha256:}"

    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: error
        name: digests-${{ env.PLATFORM_WITHOUT_SLASH }}
        path: ${{ runner.temp }}/digests/*
        retention-days: 1

  assemble-multi-arch-container-image:
    runs-on: ubuntu-24.04
    needs:
    - package-platform-specific-container-image
    steps:
    - name: Download digests
      uses: actions/download-artifact@v4
      with:
        path: ${{ runner.temp }}/digests
        pattern: digests-*
        merge-multiple: true

    - uses: docker/setup-buildx-action@v3

    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - id: metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.CONTAINER_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=semver,pattern={{version}}

    - name: Create manifest and push
      working-directory: ${{ runner.temp }}/digests
      run: |
        docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") $(printf '${{ env.CONTAINER_IMAGE_NAME }}@sha256:%s ' *)

    - name: Inspect image
      run: docker buildx imagetools inspect ${{ env.CONTAINER_IMAGE_NAME }}:${{ steps.metadata.outputs.version }}
